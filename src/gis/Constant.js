import intl from 'react-intl-universal';
// intl.get('COMM.MCT')
export const moduleType = {
  libraryType: 0,
  exchangeType: 1,
  analysisType: 2,
  dataSourceType: 3,
  qualityType: 4,
  securityType: 5,
  workReport: 6,
  searchManagementType: 7, // {intl.get('COMM.RMIUTDTAC')}（用来禁掉一些操作功能）
  dictionaryType: 'dictionary', // 数据字典
  dataReporting: 7,
};

// intl.get('COMM.AST')
export const securityTypeMap = {
  '0': 'RAS',
  '1': 'AES',
  '2': 'DES',
  '3': intl.get('BLOO.DATA_FUZZIFICATION'),
};

// intl.get('COMM.AST')
export const qualityTypeMap = {
  '0': intl.get('COMM.EVC'),
  '4': intl.get('COMM.RANGE_CONSTRAINT'),
  '5': intl.get('COMM.LENGTH_CONSTRAINT'),
};

// intl.get('COMM.DSN')
export const dataSourceNav = {
  '101': 'Oracle',
  '102': 'MYSQL',
  '103': 'DB2',
  '104': 'SqlServer',
  '105': 'Neo4j',
  '107': 'GreenPlum',
  '1': intl.get('COMM.LFS'),
  '5': intl.get('BLOO.PLATFORM_HOSTING'),
  '6': 'FTP',
  '201': 'CSV',
  '202': 'cloudTable',
  '204': intl.get('COMM.NAIL_NAIL'),
  '205': intl.get('COMM.DATA_VIEW'),
  '206': intl.get('COMM.DYNAMIC_ASSETS'),
};

export const dataSourceImage = {
  '101': 'dataSource_oracle',
  '102': 'dataSource_mysql',
  '103': 'dataSource_db2',
  '104': 'dataSource_sqlServer',
  '1': 'dataSource_default',
  '5': 'dataSource_default',
  '6': 'dataSource_FTP',
  '107': 'GreenPlum',
  '201': 'csv',
  '202': 'excel',
  '8': 'commonasset',
};

// intl.get('COMM.DDSTAU')
export const dataSourceType = {
  localFile: 1, // {intl.get('COMP.LOCAL_FILE')}
  platform: 5, // {intl.get('BLOO.PLATFORM_HOSTING')}
  FTP: 6, // {intl.get('COMM.FILE_TRANSFER')}
  csv: 201,
  excel: 202,
  GreenPlum: 107,
};

export const dataSourceUrl = {
  '101': 'jdbc:oracle:thin:@[ip]:[port]:[serviceName]',
  '102':
    'jdbc:mysql://[ip]:[port]/[databaseName]?useUnicode=true&characterEncoding=utf-8',
  '103': 'jdbc:db2://[ip]:[port]/[databaseName]:currentSchema=db2inst1;',
  '104': 'jdbc:sqlserver://[ip]:[port];DatabaseName=[databaseName]',
  '105': 'bolt://ip:port',
  '106': 'jdbc:pivotal:greenplum://[ip]:[port];DatabaseName=[databaseName]',
};

export const assetType = [
  // { label: intl.get('ANAL.BASIC_DATA'), value: '0' },
  { label: intl.get('ANAL.SUBJECT_DATA'), value: '1' },
  // { label: intl.get('APP.EXTERNAL_DATA'), value: '2' },
];

// intl.get('COMM.ALC')
export const AssetType = {
  基础数据: '0',
  主题数据: '1',
  外部数据: '2',
};

export const AssetTypeToC = {
  数据集: '3',
};

// intl.get('COMM.ALC')
export const AssetTypeMap = {
  '0': intl.get('ANAL.BASIC_DATA'),
  '1': intl.get('ANAL.SUBJECT_DATA'),
  '2': intl.get('APP.EXTERNAL_DATA'),
  '3': intl.get('COMM.DATA_SET'),
};

// intl.get('COMM.ALSC')
export const assetSort = {
  名称: '0',
  标识: '1',
  数据量: '2',
};

export const assetLibraryImage = {
  '101': 'assetLibrary_oracle',
  '102': 'assetLibrary_mysql',
  '103': 'assetLibrary_db2',
  '104': 'assetLibrary_sqlServer',
  '1': 'assetLibrary_default',
  '5': 'assetLibrary_default',
  '6': 'assetLibrary_FTP',
  '201': 'assetLibrary_csv',
  '107': 'assetLibrary_GreenPlum',
};

// intl.get('COMM.APSM')
export const AssetImage = {
  '101': 'assetLibrary_oracle',
  '102': 'assetLibrary_mysql',
  '103': 'assetLibrary_db2',
  '104': 'assetLibrary_sqlServer',
  '1': 'assetLibrary_default',
  '5': 'assetLibrary_default',
  '6': 'assetLibrary_FTP',
  '201': 'assetLibrary_csv',
  '107': 'assetLibrary_GreenPlum',
};

export const DataType = {
  '0': intl.get('ANAL.CHARACTER_STRING'),
  '1': intl.get('ANAL.INTEGER'),
  '2': intl.get('ANAL.LONG_INTEGER'),
  '3': intl.get('ANAL.SPD'),
  '4': intl.get('ANAL.DPD'),
  '5': intl.get('ANAL.date14').d('日期(年月日)'),
  '6': intl.get('ANAL.THMS').d('时间(时分秒)'),
  '7': intl.get('BLOO.BOOLEAN_VALUE'),
  '8': intl.get('ANAL.NUMERICAL_VALUE'),
  '9': intl.get('ANAL.SERIES'),
  '11': intl.get('ANAL.CHARACTER_STRING'), // 11 为字节数组 当做字符串处理
  String: 0,
  Integer: 8,
  Long: 8,
  Float: 8,
  Double: 8,
  Date: 5,
  Timestamp: 6,
  Boolean: 7,
  num: 8,
  series: 9,
};

export const TypeName = {
  text: '0',
  digital: '8',
  date: '5',
  Timestamp: '6',
};

export const DataImage = {
  '0': 'text',
  '1': 'digital',
  '2': 'digital',
  '3': 'digital',
  '4': 'digital',
  '5': 'date',
  '6': 'date',
  '7': 'boolean',
  '8': 'digital',
};

export const DataTypeMatch = {
  '0': 'string',
  '1': 'number',
  '2': 'number',
  '3': 'number',
  '4': 'number',
  '5': 'calendar',
  '6': 'calendar',
  '7': 'bool',
  '8': 'number',
};

export const DataTypeImage = {
  0: 'icon-text',
  1: 'icon-shuzhi',
  2: 'icon-shuzhi',
  3: 'icon-shuzhi',
  4: 'icon-shuzhi',
  5: 'icon-date',
  6: 'icon-date',
  7: 'icon-shuzhi',
  8: 'icon-shuzhi',
  9: 'icon-text',
};

export const NullAble = {
  '0': intl.get('COMM.NOT_ALLOW'),
  '1': intl.get('COMM.ALLOW'),
};

export const Unique = {
  '0': intl.get('COMM.NOT_UNIQUE'),
  '1': intl.get('REPO.ONLY'),
};

export const Distribution = {
  资产分布: '0',
  流程分布: '1',
  应用分布: '2',
};

export const DateOption = {
  1: intl.get('ANAL.AND_AFTER'),
  3: intl.get('ANAL.AND_BEFORE'),
  4: intl.get('ANAL.BET'),
  5: intl.get('ANAL.NET'),
  6: intl.get('ANAL.EMPTY'),
  7: intl.get('ANAL.NOT_EMPTY'),
  8: intl.get('ANAL.BEFORE'),
  9: intl.get('ANAL.AFTER'),
  13: intl.get('ANAL.RANGE'),
  15: intl.get('ANAL.TODAY'),
  16: intl.get('ANAL.YESTERDAY'),
  17: intl.get('ANAL.LAST_WEEK'),
  18: intl.get('ANAL.LTW'),
  19: intl.get('ANAL.LAST_MONTH'),
  20: intl.get('ANAL.LTM'),
  21: intl.get('ANAL.LAST_YEAR'),
  22: intl.get('ANAL.TOMORROW'),
  23: intl.get('ANAL.NEXT_WEEK'),
  24: intl.get('ANAL.THIS_WEEK'),
  25: intl.get('ANAL.PREVIOUS_WEEK'),
  26: intl.get('ANAL.NEXT_MONTH'),
  27: intl.get('ANAL.THIS_MONTH'),
  28: intl.get('ANAL.PREVIOUS_MONTH'),
  34: intl.get('ANAL.PREVIOUS_QUARTER'),
  32: intl.get('ANAL.NEXT_QUARTER'),
  31: intl.get('ANAL.PREVIOUS_YEAR'),
  29: intl.get('ANAL.NEXT_YEAR'),
  30: intl.get('ANAL.THIS_YEAR'),
  33: intl.get('ANAL.THIS_QUARTER'),
  39: intl.get('ANAL.NEAR'),
  40: intl.get('COMM.TDA'),
};

// queryParams 使用 queryType,filter使用compareType
export const DateOptionQueryParams = {
  111: intl.get('ANAL.AND_AFTER'),
  113: intl.get('ANAL.AND_BEFORE'),
  2: intl.get('ANAL.BET'),
  6: intl.get('ANAL.NET'),
  116: intl.get('ANAL.EMPTY'),
  117: intl.get('ANAL.NOT_EMPTY'),
  8: intl.get('ANAL.BEFORE'),
  9: intl.get('ANAL.AFTER'),
  13: intl.get('ANAL.RANGE'),
  15: intl.get('ANAL.TODAY'),
  16: intl.get('ANAL.YESTERDAY'),
  17: intl.get('ANAL.LAST_WEEK'),
  18: intl.get('ANAL.LTW'),
  19: intl.get('ANAL.LAST_MONTH'),
  20: intl.get('ANAL.LTM'),
  21: intl.get('ANAL.LAST_YEAR'),
  22: intl.get('ANAL.TOMORROW'),
  23: intl.get('ANAL.NEXT_WEEK'),
  24: intl.get('ANAL.THIS_WEEK'),
  25: intl.get('ANAL.PREVIOUS_WEEK'),
  26: intl.get('ANAL.NEXT_MONTH'),
  27: intl.get('ANAL.THIS_MONTH'),
  28: intl.get('ANAL.PREVIOUS_MONTH'),
  34: intl.get('ANAL.PREVIOUS_QUARTER'),
  32: intl.get('ANAL.NEXT_QUARTER'),
  31: intl.get('ANAL.PREVIOUS_YEAR'),
  29: intl.get('ANAL.NEXT_YEAR'),
  30: intl.get('ANAL.THIS_YEAR'),
  33: intl.get('ANAL.THIS_QUARTER'),
  39: intl.get('ANAL.NEAR'),
  40: intl.get('COMM.TDA'),
};

export const TextOption = {
  4: intl.get('ANAL.BET'),
  5: intl.get('ANAL.NET'),
  6: intl.get('ANAL.EMPTY'),
  7: intl.get('ANAL.NOT_EMPTY'),
  10: intl.get('SRC.CONTAIN'),
  11: intl.get('ANAL.START'),
  12: intl.get('SRC.END'),
  14: intl.get('SRC.NOT_INCLUDED'),
  37: intl.get('ANAL.WITHIN'),
  38: intl.get('ANAL.NOT_IN'),
};

// queryParams 使用 queryType,filter使用compareType
export const TextOptionQueryParams = {
  2: intl.get('ANAL.BET'),
  6: intl.get('ANAL.NET'),
  116: intl.get('ANAL.EMPTY'),
  117: intl.get('ANAL.NOT_EMPTY'),
  10: intl.get('SRC.CONTAIN'),
  11: intl.get('ANAL.START'),
  12: intl.get('SRC.END'),
  14: intl.get('SRC.NOT_INCLUDED'),
  37: intl.get('ANAL.WITHIN'),
  38: intl.get('ANAL.NOT_IN'),
};

export const NumberOption = {
  0: intl.get('SRC.GREATER_THAN'),
  1: intl.get('SRC.GTOET'),
  2: intl.get('SRC.LESS_THAN'),
  3: intl.get('SRC.LTOET'),
  4: intl.get('ANAL.BET'),
  5: intl.get('ANAL.NET'),
  6: intl.get('ANAL.EMPTY'),
  7: intl.get('ANAL.NOT_EMPTY'),
  13: intl.get('ANAL.RANGE'),
  37: intl.get('ANAL.WITHIN'),
};

// queryParams 使用 queryType,filter使用compareType
export const NumberOptionQueryParams = {
  110: intl.get('SRC.GREATER_THAN'),
  111: intl.get('SRC.GTOET'),
  112: intl.get('SRC.LESS_THAN'),
  113: intl.get('SRC.LTOET'),
  2: intl.get('ANAL.BET'),
  6: intl.get('ANAL.NET'),
  116: intl.get('ANAL.EMPTY'),
  117: intl.get('ANAL.NOT_EMPTY'),
  13: intl.get('ANAL.RANGE'),
  37: intl.get('ANAL.WITHIN'),
};

export const BooleanOption = {
  4: intl.get('ANAL.BET'),
  6: intl.get('ANAL.EMPTY'),
  7: intl.get('ANAL.NOT_EMPTY'),
};

// queryParams 使用 queryType,filter使用compareType
export const BooleanOptionQueryParams = {
  2: intl.get('ANAL.BET'),
  116: intl.get('ANAL.EMPTY'),
  117: intl.get('ANAL.NOT_EMPTY'),
};

export const sortOption = {
  0: 'up',
  1: 'down',
};

export const unitOption = [
  { key: 0, label: intl.get('ASS.MINUTE') },
  { key: 1, label: intl.get('ATTE.HOUR') },
  { key: 4, label: intl.get('ANAL.SECOND') },
  { key: 2, label: intl.get('APP.DAY') },
  { key: 3, label: intl.get('ANAL.MONTH') },
];

export const timeGranularity = {
  [intl.get('EX.BY_YEAR')]: 0,
  [intl.get('COMM.QUARTERLY')]: 1,
  [intl.get('EX.MONTHLY')]: 2,
  [intl.get('EX.BY_WEEK')]: 3,
  [intl.get('EX.BY_DAY')]: 4,
  [intl.get('EX.ON_TIME')]: 5,
  [intl.get('EX.BY_POINTS')]: 6,
  [intl.get('EX.BY_SECOND')]: 7,
};
export const TimeMapping = [
  intl.get('EX.BY_YEAR'),
  intl.get('COMM.QUARTERLY'),
  intl.get('EX.MONTHLY'),
  intl.get('EX.BY_WEEK'),
  intl.get('EX.BY_DAY'),
  intl.get('EX.ON_TIME'),
  intl.get('EX.BY_POINTS'),
  intl.get('EX.BY_SECOND'),
];

// intl.get('COMM.ANCT')
export const calculateType = {
  string: {
    [intl.get('ANAL.COUNT')]: 1,
    [intl.get('EX.DDC')]: 6,
    [intl.get('ANAL.NOTHING')]: -1,
  },
  number: {
    [intl.get('ANAL.SUM')]: 0,
    [intl.get('ANAL.COUNT')]: 1,
    [intl.get('ANAL.NOTHING')]: -1,
    [intl.get('ANAL.AVERAGE_VALUE')]: 2,
    [intl.get('ANAL.MAXIMUM')]: 3,
    [intl.get('ANAL.MINIMUM_VALUE')]: 4,
    [intl.get('EX.DE_SUMMATION')]: 7,
    [intl.get('COMM.KURTOSIS')]: 8,
    [intl.get('EX.SKEWNESS')]: 9,
    [intl.get('EX.SSD')]: 14,
    [intl.get('EX.OSD')]: 15,
    [intl.get('EX.SAMPLE_VARIANCE')]: 12,
    [intl.get('EX.POPULATION_VARIANCE')]: 13,
    [intl.get('COMM.CUSTOM_AGGREGATION')]: 30,
  },
  date: {
    [intl.get('ANAL.COUNT')]: 1,
    [intl.get('ANAL.NOTHING')]: -1,
    [intl.get('ANAL.MAXIMUM')]: 3,
    [intl.get('ANAL.MINIMUM_VALUE')]: 4,
    [intl.get('EX.DDC')]: 6,
  },
  bool: {
    [intl.get('ANAL.COUNT')]: 1,
    [intl.get('EX.DDC')]: 6,
  },
};
export const MapCalculateType2 = {
  0: intl.get('ANAL.SUM'),
  1: intl.get('ANAL.COUNT'),
  '-1': intl.get('ANAL.NOTHING'),
  2: intl.get('ANAL.AVERAGE_VALUE'),
  3: intl.get('ANAL.MAXIMUM'),
  4: intl.get('ANAL.MINIMUM_VALUE'),
  5: intl.get('EX.DDC'),
  6: intl.get('EX.DE_SUMMATION'),
  8: intl.get('COMM.KURTOSIS'),
  9: intl.get('EX.SKEWNESS'),
  14: intl.get('EX.SSD'),
  15: intl.get('EX.OSD'),
  12: intl.get('EX.SAMPLE_VARIANCE'),
  13: intl.get('EX.POPULATION_VARIANCE'),
  30: intl.get('COMM.CUSTOM_AGGREGATION'),
};
export const MapCalculateType = {
  [intl.get('ANAL.SUM')]: 0,
  [intl.get('ANAL.COUNT')]: 1,
  [intl.get('ANAL.NOTHING')]: -1,
  [intl.get('ANAL.AVERAGE_VALUE')]: 2,
  [intl.get('ANAL.MAXIMUM')]: 3,
  [intl.get('ANAL.MINIMUM_VALUE')]: 4,
  [intl.get('EX.DDC')]: 6,
  [intl.get('EX.DE_SUMMATION')]: 7,
  [intl.get('COMM.KURTOSIS')]: 8,
  [intl.get('EX.SKEWNESS')]: 9,
  [intl.get('EX.SSD')]: 14,
  [intl.get('EX.OSD')]: 15,
  [intl.get('EX.SAMPLE_VARIANCE')]: 12,
  [intl.get('EX.POPULATION_VARIANCE')]: 13,
  [intl.get('COMM.CUSTOM_AGGREGATION')]: 30,
};

export const OpenAsset = {
  公开: 'public',
  私有: 'private',
  指定: 'partial',
};

export const OpenAssetNew = {
  完全公开: 'public',
  完全私有: 'private',
  指定公开: 'partial',
};

// intl.get('COMM.SDC')
export const typeDiff = {
  add: 0, // {intl.get('COMM.NEW_STATUS')}
  edit: 1, // {intl.get('REPO.EDIT_STATUS')}
  view: 2, // {intl.get('COMM.VIEW_STATUS')}
  dashboard: 3, // {intl.get('COMM.EFDASP')}
  library: 4, // {intl.get('COMM.AFALSP')}
  share: 5, // {intl.get('COMM.SDISP')}
};
// intl.get('COMM.ASC')
export const analysisSort = {
  名称: '0',
  标识: '1',
};

// intl.get('COMM.SSC')
export const exchangeSort = {
  名称: '0',
  最近执行: '1',
  最新: '2',
};

// intl.get('COMM.SWITCH_CYCLE')
export const intervals = [
  intl.get('ANAL.SECOND'),
  intl.get('ASS.MINUTE'),
  intl.get('ATTE.HOUR'),
  intl.get('ANAL.DAY'),
  intl.get('ANAL.WEEK'),
  intl.get('ANAL.MONTH'),
  intl.get('ANAL.YEAR'),
];

// intl.get('COMM.DAC')
export const dataStoreIntervals = [
  intl.get('ANAL.NOTHING'),
  intl.get('ANAL.DAY'),
  intl.get('ANAL.WEEK'),
  intl.get('ANAL.MONTH'),
  intl.get('ANAL.YEAR'),
];

// intl.get('COMM.GAPOAMP')
export const analysisImage = {
  101: 'table-main.png',
  107: 'index-main.png',
  110: 'radar-main.png',
  111: 'scatter-main.png',
  112: 'polar-main.png',
  201: 'above-main.png',
  202: 'sankey-main.png',
  203: 'lineBar-main.png',
  204: 'progressBar-main.png',
  205: 'bar-main.png',
  206: 'line-main.png',
  301: 'heatMap-main.png',
  302: 'bar-main.png',
  303: 'JSScatterMap-main.png',
  304: 'JSinflowMap-main.png',
  305: 'JSoutflowMap-main.png',
  306: 'chinaInFlow-main.png',
  307: 'chinaOutFlow-main.png',
  308: 'JSAreaData-main.png',
  309: 'migration-main.png',
  401: 'board-main.png',
  402: 'board-main.png',
  403: 'line-main.png',
  404: 'JSScatterMap-main.png',
  405: 'index-main.png',
  406: 'line-main.png',
  407: 'line-main.png',
  408: 'pieInner-main.png',
  409: 'c-table-main.png',
  410: 'c-list-main.png',
  411: 'bar-main.png',
  415: 'progressBar-main.png',
  412: 'index-main.png',
  413: 'z-index-main.png',
  1110: 'board-main.png',
  1111: 'table-main.png',
  414: 'JSAreaData-main.png',
  104: 'line-main.png',
  113: 'line-main.png',
  114: 'line-main.png',
  115: 'line-main.png',
  116: 'line-main.png',
  117: 'line-main.png',
  118: 'line-main.png',
  119: 'line-main.png',
  105: 'area-main.png',
  120: 'area-main.png',
  121: 'area-main.png',
  122: 'area-main.png',
  123: 'area-main.png',
  124: 'area-main.png',
  125: 'area-main.png',
  126: 'area-main.png',
  102: 'bar-main.png',
  108: 'barT-main.png',
  127: 'bar-main.png',
  128: 'barT-main.png',
  129: 'bar-main.png',
  130: 'barT-main.png',
  103: 'pie-main.png',
  106: 'pieInner-main.png',
  131: 'pie-main.png',
  132: 'pie-main.png',
  133: 'pie-main.png',
  109: 'board-main.png',
  134: 'board-main.png',
  135: 'board-main.png',
  138: 'scatter-main.png',
};

// intl.get('COMM.ANALYZER_ICON')
export const analysisTypeImage = {
  101: 'table-s-icon.png',
  107: 'index-s-icon.png',
  110: 'radar-s-icon.png',
  111: 'scatter-s-icon.png',
  112: 'polar-s-icon.png',
  201: 'above-s-icon.png',
  202: 'sankey-s-icon.png',
  203: 'lineBar-s-icon.png',
  204: 'progressBar-s-icon.png',
  205: 'Vbar-s-icon.png',
  206: 'line-s-icon.png',
  301: 'heatmap-s-icon.png',
  302: 'paiming-s-icon.png',
  303: 'JSScatter-s-icon.png',
  304: 'JSinflow-s-icon.png',
  305: 'JSoutflow-s-icon.png',
  306: 'chinaInFlow-s-icon.png',
  307: 'chinaOutFlow-s-icon.png',
  308: 'JSAreaData-s-icon.png',
  309: 'migration-s-icon.png',
  401: 'board-s-icon.png',
  402: 'Vbar-s-icon.png',
  403: 'line-s-icon.png',
  // 404 : "JSScatter-s-icon.png",
  405: 'index-s-icon.png',
  406: 'line-s-icon.png',
  407: 'line-s-icon.png',
  408: 'ring-s-icon.png',
  409: 'c-table-s-icon.png',
  410: 'c-list-s-icon.png',
  411: 'Vbar-s-icon.png',
  415: 'index-s-icon.png',
  412: 'index-s-icon.png',
  413: 'z-index-s-icon.png',
  // 1110 : "Vbar-s-icon.png",
  // 1111 : "table-s-icon.png",
  414: 'JSAreaData-s-icon.png',
  104: 'line-s-icon.png',
  113: 'line-s-icon.png',
  114: 'line-s-icon.png',
  115: 'line-s-icon.png',
  116: 'line-s-icon.png',
  117: 'line-s-icon.png',
  118: 'line-s-icon.png',
  119: 'line-s-icon.png',
  105: 'lineShadow-s-icon.png',
  120: 'lineShadow-s-icon.png',
  121: 'lineShadow-s-icon.png',
  122: 'lineShadow-s-icon.png',
  123: 'lineShadow-s-icon.png',
  124: 'lineShadow-s-icon.png',
  125: 'lineShadow-s-icon.png',
  126: 'lineShadow-s-icon.png',
  102: 'Vbar-s-icon.png',
  108: 'Wbar-s-icon.png',
  127: 'Vbar-s-icon.png',
  128: 'Wbar-s-icon.png',
  129: 'Vbar-s-icon.png',
  130: 'Wbar-s-icon.png',
  103: 'pie-s-icon.png',
  106: 'ring-s-icon.png',
  131: 'pie-s-icon.png',
  132: 'pie-s-icon.png',
  133: 'pie-s-icon.png',
  109: 'board-s-icon.png',
  134: 'board-s-icon.png',
  135: 'board-s-icon.png',
  138: 'scatter-s-icon.png',
};
// intl.get('COMM.AGT')
export const statusType = {
  数据表格: '101',
  雷达图: '110',
  散点图: '111',
  玫瑰图: '112',
  桑基图: '202',
  折柱混合图: '203',
  进度条: '204',
  分类柱状图: '205',
  分类折线图: '206',
  热力图: '301',
  江苏地区指标排名: '302',
  江苏省散点地图: '303',
  江苏省内流入图: '304',
  江苏省内流出图: '305',
  国内流入图: '306',
  国内流出图: '307',
  江苏区域数据图: '308',
  迁徙图: '309',
  定制化仪表盘: '401',
  定制化柱状图: '402',
  定制化折线图: '403',
  定制化指标卡: '405',
  燃尽图: '406',
  拟合图: '407',
  进度环状图: '408',
  轮播表格: '409',
  轮播列表: '410',
  象形柱图: '411',
  进度条列表: '415',
  单属性指标卡组: '412',
  双属性指标卡组: '413',
  '3D江苏地图': '414',
  基础曲线: '104',
  垂直曲线: '113',
  基础直线: '114',
  垂直直线: '115',
  分组直线: '116',
  垂直分组直线: '117',
  分组曲线: '118',
  垂直分组曲线: '119',
  曲线面积: '105',
  直线面积: '120',
  堆叠直线: '121',
  堆叠曲线: '122',
  百分比堆叠直线: '123',
  百分比堆叠曲线: '124',
  直线面积范围: '125',
  曲线面积范围: '126',
  基础柱状: '102',
  基础条形: '108',
  分组柱状: '127',
  分组条形: '128',
  分组堆叠柱状: '201',
  分组堆叠条形: '130',
  堆叠条形: '145',
  动态条形: '146',
  基础饼图: '103',
  环形图: '408',
  双饼图: '131',
  扇形图: '132',
  旭日图: '133',
  指标卡: '107',
  速度仪: '109',
  仪表盘: '134',
  物理时钟: '135',
  电子时钟: '136', // 没做
  子弹图: '137', // 没做
  气泡图: '138',
  // 定制表格: '701',
  矩形树图: '702',
  地图着色图: '703',
  地图气泡图: '705',
  漏斗图: '420',
  词云图: '426',
  双向柱状图: '427',
  K线图: '432',
  单维度单值指标卡: '416',
  组织架构图: '436',
  立体圆柱: '147',
  金字塔图: '437',
  关系曲线图: '439',
  周期预测: '803',
};

export const chartLabels = {
  '101': intl.get('ANAL.DATA_TABLE'),
  '110': intl.get('COMM.RADAR_CHART'),
  '111': intl.get('COMP.SCATTER_DIAGRAM'),
  '112': intl.get('COMM.ROSE_CHART'),
  '202': intl.get('COMM.SANKEY '),
  '203': intl.get('COMP.FCMD'),
  '205': intl.get('COMM.CLASSIFICATION_HISTOGRAM'),
  '402': intl.get('COMM.CUSTOMIZED_HISTOGRAM'),
  '403': intl.get('COMM.CLC'),
  '405': intl.get('COMM.CIC'),
  '406': intl.get('COMM.BURNOUT_DIAGRAM'),
  '408': intl.get('COMM.PROGRESS_LOOP'),
  '104': intl.get('COMP.FOUNDATION_CURVE'),
  '113': intl.get('COMP.VERTICAL_CURVE'),
  '114': intl.get('COMP.FSL'),
  '115': intl.get('COMP.VERTICAL_LINE'),
  '116': intl.get('COMP.GROUPING_LINE'),
  '117': intl.get('COMP.VGL'),
  '118': intl.get('COMP.GROUPING_CURVE'),
  '119': intl.get('COMP.VGC'),
  '105': intl.get('COMP.CURVE_AREA'),
  '120': intl.get('COMP.LINEAR_AREA'),
  '121': intl.get('COMP.STACKED_LINES'),
  '122': intl.get('COMP.STACKING_CURVE'),
  '123': intl.get('COMM.PSL'),
  '124': intl.get('COMM.PSC'),
  '125': intl.get('COMP.LAR'),
  '126': intl.get('COMP.CAR'),
  '102': intl.get('COMP.FOUNDATION_COLUMNAR'),
  '108': intl.get('COMP.FOUNDATION_STRIP'),
  '127': intl.get('COMM.GROUPED_COLUMNAR'),
  '128': intl.get('COMM.GROUPED_BAR'),
  '201': intl.get('COMM.GSC'),
  '130': intl.get('COMM.GSB'),
  '145': intl.get('COMM.STACKED_BAR'),
  '146': intl.get('COMM.DYNAMIC_BAR'),
  '103': intl.get('COMM.BPC'),
  '106': intl.get('COMM.PROGRESS_LOOP'),
  '131': intl.get('COMM.DPC'),
  '132': intl.get('COMM.SECTOR_DIAGRAM'),
  '133': intl.get('COMM.RSC'),
  '107': intl.get('COMM.INDEX_CARD'),
  '109': intl.get('COMM.SPEEDOMETER'),
  '134': intl.get('COMP.DASHBOARD'),
  '135': intl.get('COMM.PHYSICAL_CLOCK'),
  '138': intl.get('COMM.BUBBLE_DIAGRAM'),
  '701': intl.get('ANAL.DATA_TABLE'),
  '702': intl.get('COMM.RECTANGULAR_TREE'),
  '703': intl.get('ANAL.MCM'),
  '705': intl.get('ANAL.MAP_BUBBLE'),
  '420': intl.get('COMM.FUNNEL_DIAGRAM'),
  '416': intl.get('COMM.SDSVIC'),
  '426': intl.get('COMM.WCP'),
  '427': intl.get('COMM.BIDIRECTIONAL_HISTOGRAM'),
  '432': 'K线图',
  '439': intl.get('COMP.RELATIONSHIP_GRAPH'),
};

// intl.get('ANAL.COMMONLY_USED')
export const chartTypeOften = {
  101: '0',
  104: '0',
  120: '0',
  102: '0',
  108: '0',
  103: '0',
  116: '0',
  121: '0',
  127: '0',
  128: '0',
};

// 分析仪子页面图表类型0{intl.get('ANAL.COMMONLY_USED')}1折线图2面积图3柱状图4饼图5仪表图6地图7其他8定制化
export const chartType = {
  104: '1',
  113: '1',
  114: '1',
  115: '1',
  116: '1',
  117: '1',
  118: '1',
  119: '1',
  102: '2',
  108: '2',
  127: '2',
  128: '2',
  201: '2',
  130: '2',
  145: '2',
  105: '3',
  121: '3',
  120: '3',
  122: '3',
  123: '3',
  124: '3',
  125: '3',
  103: '4',
  106: '4',
  131: '4',
  132: '4',
  133: '4',
  204: '5',
  107: '5',
  416: '5',
  405: '5',
  109: '5',
  134: '5',
  301: '6',
  303: '6',
  304: '6',
  305: '6',
  306: '6',
  307: '6',
  308: '6',
  309: '6',
  703: '6',
  705: '6',
  135: '7',
  202: '7',
  136: '7',
  137: '7',
  138: '7',
  110: '7',
  203: '7',
  112: '7',
  402: '7',
  403: '7',
  702: '7',
  420: '7',
  426: '7',
  711: '6',
  712: '6',
  713: '6',
  714: '6',
  317: '6',
  315: '6',
  126: '3',
};

// intl.get('COMM.ASPCTAPA')
export const charts = {
  [intl.get('ANAL.COMMONLY_USED')]: {
    [intl.get('ANAL.DATA_TABLE')]: {
      img: 'table.png',
      disableimg: 'table-gray.png',
      selected: 'table-selected.png',
      mindims: '0',
      maxdims: '100',
      minkeys: '0',
      maxkeys: '100',
      minvals: '0',
      maxvals: '100',
      title: intl.get('ANAL.DATA_TABLE'),
      dimsdesc: '0个或多个维度',
      valsdesc: '0个或多个数值',
    },
    [intl.get('COMP.FSL')]: {
      img: 'baseLine.png',
      disableimg: 'baseLine-gray.png',
      selected: 'baseLine-selected.png',
      mindims: '1',
      maxdims: '1',
      minvals: '1',
      maxvals: '5',
      title: intl.get('COMP.FSL'),
      dimsdesc: '1个维度',
      valsdesc: '1-5个数值',
    },
    [intl.get('COMP.LINEAR_AREA')]: {
      img: 'straightArea.png',
      disableimg: 'straightArea-gray.png',
      selected: 'straightArea-selected.png',
      mindims: '1',
      maxdims: '2',
      minvals: '1',
      maxvals: '7',
      title: intl.get('COMP.LINEAR_AREA'),
      dimsdesc: '2个以内维度',
      valsdesc: '7个以内数值',
    },
    [intl.get('COMP.FOUNDATION_COLUMNAR')]: {
      img: 'basicColumn.png',
      disableimg: 'basicColumn-gray.png',
      selected: 'basicColumn-selected.png',
      mindims: '1',
      maxdims: '1',
      minvals: '1',
      maxvals: '5',
      title: intl.get('COMP.FOUNDATION_COLUMNAR'),
      dimsdesc: '1个维度',
      valsdesc: '1-5个数值',
    },
    [intl.get('COMP.FOUNDATION_STRIP')]: {
      img: 'basicStrip.png',
      disableimg: 'basicStrip-gray.png',
      selected: 'basicStrip-selected.png',
      mindims: '1',
      maxdims: '1',
      minvals: '1',
      maxvals: '5',
      title: intl.get('COMP.FOUNDATION_STRIP'),
      dimsdesc: '1个维度',
      valsdesc: '1-5个数值',
    },
    [intl.get('COMM.BPC')]: {
      img: 'pie.png',
      disableimg: 'pie-gray.png',
      selected: 'pie-selected.png',
      mindims: '1',
      maxdims: '1',
      minvals: '1',
      maxvals: '1',
      title: intl.get('COMM.BPC'),
      dimsdesc: '1个维度',
      valsdesc: '1个数值',
    },
    [intl.get('COMP.GROUPING_LINE')]: {
      img: 'groupingLine.png',
      disableimg: 'groupingLine-gray.png',
      selected: 'groupingLine-selected.png',
      mindims: '1',
      maxdims: '1',
      minvals: '1',
      maxvals: '7',
      title: intl.get('COMP.GROUPING_LINE'),
      dimsdesc: '1个以内维度',
      valsdesc: '7个以内数值',
    },
    [intl.get('COMP.STACKED_LINES')]: {
      img: 'stackingLine.png',
      disableimg: 'stackingLine-gray.png',
      selected: 'stackingLine-selected.png',
      mindims: '2',
      maxdims: '2',
      minvals: '1',
      maxvals: '7',
      title: intl.get('COMP.STACKED_LINES'),
      dimsdesc: '2个维度',
      valsdesc: '7个以内数值',
    },
    [intl.get('COMM.GROUPED_COLUMNAR')]: {
      img: 'groupedColumn.png',
      disableimg: 'groupedColumn-gray.png',
      selected: 'groupedColumn-selected.png',
      mindims: '1',
      maxdims: '1',
      minkeys: '1',
      maxkeys: '1',
      minvals: '1',
      maxvals: '1',
      title: intl.get('COMM.GROUPED_COLUMNAR'),
      dimsdesc: '1个维度，1个对比维度',
      valsdesc: '1个数值',
    },
    [intl.get('COMM.GROUPED_BAR')]: {
      img: 'groupingStrip.png',
      disableimg: 'groupingStrip-gray.png',
      selected: 'groupingStrip-selected.png',
      mindims: '1',
      maxdims: '1',
      minkeys: '1',
      maxkeys: '1',
      minvals: '1',
      maxvals: '1',
      title: intl.get('COMM.GROUPED_BAR'),
      dimsdesc: '1个维度，1个对比维度',
      valsdesc: '1个数值',
    },
  },
  [intl.get('DICT.LINE_CHART')]: {
    [intl.get('COMP.FSL')]: {
      img: 'baseLine.png',
      disableimg: 'baseLine-gray.png',
      selected: 'baseLine-selected.png',
      mindims: '1',
      maxdims: '1',
      minvals: '1',
      maxvals: '5',
      title: intl.get('COMP.FSL'),
      dimsdesc: '1个维度',
      valsdesc: '1-5个数值',
    },
    [intl.get('COMP.VERTICAL_LINE')]: {
      img: 'verticalLine.png',
      disableimg: 'verticalLine-gray.png',
      selected: 'verticalLine-selected.png',
      mindims: '1',
      maxdims: '1',
      minvals: '1',
      maxvals: '5',
      title: intl.get('COMP.VERTICAL_LINE'),
      dimsdesc: '1个维度',
      valsdesc: '1-5个数值',
    },
    [intl.get('COMP.FOUNDATION_CURVE')]: {
      img: 'basecurve.png',
      disableimg: 'basecurve_gray.png',
      selected: 'basecurve_selected.png',
      mindims: '1',
      maxdims: '1',
      minvals: '1',
      maxvals: '5',
      title: intl.get('COMP.FOUNDATION_CURVE'),
      dimsdesc: '1个维度',
      valsdesc: '1-5个数值',
    },
    [intl.get('COMP.VERTICAL_CURVE')]: {
      img: 'verticalcurve.png',
      disableimg: 'verticalcurve-gray.png',
      selected: 'verticalcurve-selected.png',
      mindims: '1',
      maxdims: '1',
      minvals: '1',
      maxvals: '5',
      title: intl.get('COMP.VERTICAL_CURVE'),
      dimsdesc: '1个维度',
      valsdesc: '1-5个数值',
    },
    [intl.get('COMP.GROUPING_LINE')]: {
      img: 'groupingLine.png',
      disableimg: 'groupingLine-gray.png',
      selected: 'groupingLine-selected.png',
      mindims: '1',
      maxdims: '1',
      minvals: '2',
      maxvals: '7',
      title: intl.get('COMP.GROUPING_LINE'),
      dimsdesc: '1个维度',
      valsdesc: '2-7个以内数值',
    },
    [intl.get('COMP.VGL')]: {
      img: 'verticalgroupingline.png',
      disableimg: 'verticalgroupingline-gray.png',
      selected: 'verticalgroupingline-selected.png',
      mindims: '1',
      maxdims: '1',
      minvals: '2',
      maxvals: '7',
      title: intl.get('COMP.VGL'),
      dimsdesc: '1个维度',
      valsdesc: '2-7个以内数值',
    },
    [intl.get('COMP.GROUPING_CURVE')]: {
      img: 'groupingCurve.png',
      disableimg: 'groupingCurve-gray.png',
      selected: 'groupingCurve-selected.png',
      mindims: '1',
      maxdims: '1',
      minvals: '2',
      maxvals: '7',
      title: intl.get('COMP.GROUPING_CURVE'),
      dimsdesc: '1个维度',
      valsdesc: '2-7个以内数值',
    },
    [intl.get('COMP.VGC')]: {
      img: 'verticalgroupingCurve.png',
      disableimg: 'verticalgroupingCurve-gray.png',
      selected: 'verticalgroupingCurve-selected.png',
      mindims: '1',
      maxdims: '1',
      minvals: '2',
      maxvals: '7',
      title: intl.get('COMP.VGC'),
      dimsdesc: '1个维度',
      valsdesc: '2-7个以内数值',
    },
  },
  [intl.get('COMP.AREA_MAP')]: {
    [intl.get('COMP.LINEAR_AREA')]: {
      img: 'straightArea.png',
      disableimg: 'straightArea-gray.png',
      selected: 'straightArea-selected.png',
      mindims: '1',
      maxdims: '2',
      minvals: '1',
      maxvals: '7',
      title: intl.get('COMP.LINEAR_AREA'),
      dimsdesc: '2个以内维度',
      valsdesc: '7个以内数值',
    },
    [intl.get('COMP.CURVE_AREA')]: {
      img: 'curveArea.png',
      disableimg: 'curveArea-gray.png',
      selected: 'curveArea-selected.png',
      mindims: '1',
      maxdims: '2',
      minvals: '1',
      maxvals: '7',
      title: intl.get('COMP.CURVE_AREA'),
      dimsdesc: '2个以内维度',
      valsdesc: '7个以内数值',
    },
    [intl.get('COMP.STACKED_LINES')]: {
      img: 'stackingLine.png',
      disableimg: 'stackingLine-gray.png',
      selected: 'stackingLine-selected.png',
      mindims: '2',
      maxdims: '2',
      minvals: '1',
      maxvals: '7',
      title: intl.get('COMP.STACKED_LINES'),
      dimsdesc: '2个维度',
      valsdesc: '7个以内数值',
    },
    [intl.get('COMP.STACKING_CURVE')]: {
      img: 'stackingCurve.png',
      disableimg: 'stackingCurve-gray.png',
      selected: 'stackingCurve-selected.png',
      mindims: '2',
      maxdims: '2',
      minvals: '1',
      maxvals: '7',
      title: intl.get('COMP.STACKING_CURVE'),
      dimsdesc: '2个维度',
      valsdesc: '7个以内数值',
    },
    [intl.get('COMM.PSL')]: {
      img: 'percentStackingLine.png',
      disableimg: 'percentStackingLine-gray.png',
      selected: 'percentStackingLine-selected.png',
      mindims: '2',
      maxdims: '2',
      minvals: '1',
      maxvals: '7',
      title: intl.get('COMM.PSL'),
      dimsdesc: '2个维度',
      valsdesc: '7个以内数值',
    },
    [intl.get('COMM.PSC')]: {
      img: 'percentStackingCurve.png',
      disableimg: 'percentStackingCurve-gray.png',
      selected: 'percentStackingCurve-selected.png',
      mindims: '2',
      maxdims: '2',
      minvals: '1',
      maxvals: '7',
      title: intl.get('COMM.PSC'),
      dimsdesc: '2个维度',
      valsdesc: '7个以内数值',
    },
    [intl.get('COMP.LAR')]: {
      img: 'straightLineArea.png',
      disableimg: 'straightLineArea-gray.png',
      selected: 'straightLineArea-selected.png',
      mindims: '1',
      maxdims: '1',
      minvals: '2',
      maxvals: '2',
      title: intl.get('COMP.LAR'),
      dimsdesc: '1个维度',
      valsdesc: '2个数值',
    },
    [intl.get('COMP.CAR')]: {
      img: 'straightCurveArea.png',
      disableimg: 'straightCurveArea-gray.png',
      selected: 'straightCurveArea-selected.png',
      mindims: '1',
      maxdims: '1',
      minvals: '2',
      maxvals: '2',
      title: intl.get('COMP.CAR'),
      dimsdesc: '1个维度',
      valsdesc: '2个数值',
    },
  },
  [intl.get('COMM.HISTOGRAM')]: {
    [intl.get('COMP.FOUNDATION_COLUMNAR')]: {
      img: 'basicColumn.png',
      disableimg: 'basicColumn-gray.png',
      selected: 'basicColumn-selected.png',
      mindims: '1',
      maxdims: '1',
      minvals: '1',
      maxvals: '5',
      title: intl.get('COMP.FOUNDATION_COLUMNAR'),
      dimsdesc: '1个维度',
      valsdesc: '1-5个数值',
    },
    [intl.get('COMP.FOUNDATION_STRIP')]: {
      img: 'basicStrip.png',
      disableimg: 'basicStrip-gray.png',
      selected: 'basicStrip-selected.png',
      mindims: '1',
      maxdims: '1',
      minvals: '1',
      maxvals: '5',
      title: intl.get('COMP.FOUNDATION_STRIP'),
      dimsdesc: '1个维度',
      valsdesc: '1-5个数值',
    },
    [intl.get('COMM.GSC')]: {
      img: 'stackedColumn.png',
      disableimg: 'stackedColumn-gray.png',
      selected: 'stackedColumn-selected.png',
      mindims: '2',
      maxdims: '2',
      minvals: '1',
      maxvals: '100',
      title: intl.get('COMM.GSC'),
      dimsdesc: '2个维度',
      valsdesc: '1个或多个数值',
    },
    [intl.get('COMM.GSB')]: {
      img: 'stackedStrip.png',
      disableimg: 'stackedStrip-gray.png',
      selected: 'stackedStrip-selected.png',
      mindims: '2',
      maxdims: '2',
      minvals: '1',
      maxvals: '100',
      title: intl.get('COMM.GSB'),
      dimsdesc: '2个维度',
      valsdesc: '1个或多个数值',
    },
    [intl.get('COMM.GROUPED_COLUMNAR')]: {
      img: 'groupedColumn.png',
      disableimg: 'groupedColumn-gray.png',
      selected: 'groupedColumn-selected.png',
      mindims: '1',
      maxdims: '1',
      minkeys: '1',
      maxkeys: '1',
      minvals: '1',
      maxvals: '1',
      title: intl.get('COMM.GROUPED_COLUMNAR'),
      dimsdesc: '1个维度，1个对比维度',
      valsdesc: '1个数值',
    },
    [intl.get('COMM.GROUPED_BAR')]: {
      img: 'groupingStrip.png',
      disableimg: 'groupingStrip-gray.png',
      selected: 'groupingStrip-selected.png',
      mindims: '1',
      maxdims: '1',
      minkeys: '1',
      maxkeys: '1',
      minvals: '1',
      maxvals: '1',
      title: intl.get('COMM.GROUPED_BAR'),
      dimsdesc: '1个维度，1个对比维度',
      valsdesc: '1个数值',
    },
    [intl.get('COMM.STACKED_BAR')]: {
      img: 'singleStack.png',
      disableimg: 'singleStack-gray.png',
      selected: 'singleStack.png',
      mindims: '1',
      maxdims: '1',
      minvals: '1',
      maxvals: '100',
      title: intl.get('COMM.STACKED_BAR'),
      dimsdesc: '1个维度',
      valsdesc: '1个或多个数值',
    },
    [intl.get('COMM.DYNAMIC_BAR')]: {
      img: 'bar-chart-race.gif',
      disableimg: 'basicStrip-gray.png',
      mindims: '1',
      maxdims: '1',
      minvals: '2',
      maxvals: '2',
      title: intl.get('COMM.DYNAMIC_BAR'),
      dimsdesc: '1个维度',
      valsdesc: '1个数值',
    },
  },
  [intl.get('COMP.PIE_CHART')]: {
    [intl.get('COMM.BPC')]: {
      img: 'pie.png',
      disableimg: 'pie-gray.png',
      selected: 'pie-selected.png',
      mindims: '1',
      maxdims: '1',
      minvals: '1',
      maxvals: '1',
      title: intl.get('COMM.BPC'),
      dimsdesc: '1个维度',
      valsdesc: '1个数值',
    },
    [intl.get('COMM.DPC')]: {
      img: 'doublePie.png',
      disableimg: 'doublePie-gray.png',
      selected: 'doublePie-selected.png',
      mindims: '2',
      maxdims: '2',
      minvals: '1',
      maxvals: '1',
      title: intl.get('COMM.DPC'),
      dimsdesc: '2个维度',
      valsdesc: '1个数值',
    },
    [intl.get('COMM.SECTOR_DIAGRAM')]: {
      img: 'sector.png',
      disableimg: 'sector-gray.png',
      selected: 'sector-selected.png',
      mindims: '1',
      maxdims: '1',
      minvals: '1',
      maxvals: '1',
      title: intl.get('COMM.SECTOR_DIAGRAM'),
      dimsdesc: '1个维度',
      valsdesc: '1个数值',
    },
    [intl.get('COMM.RSC')]: {
      img: 'risingSun.png',
      disableimg: 'risingSun-gray.png',
      selected: 'risingSun-selected.png',
      mindims: '2',
      maxdims: '100',
      minvals: '1',
      maxvals: '1',
      title: intl.get('COMM.RSC'),
      dimsdesc: '2个以上维度',
      valsdesc: '1个数值',
    },
    [intl.get('COMM.PROGRESS_LOOP')]: {
      img: 'ring.png',
      disableimg: 'ring-gray.png',
      selected: 'ring.png',
      mindims: '1',
      maxdims: '1',
      minvals: '1',
      maxvals: '1',
      title: intl.get('COMM.RING_DIAGRAM'),
      dimsdesc: '1个维度',
      valsdesc: '1个数值',
    },
  },
  [intl.get('COMP.INSTRUMENT_DIAGRAM')]: {
    [intl.get('COMM.CIC')]: {
      img: 'index.png',
      disableimg: 'index-gray.png',
      selected: 'index-selected.png',
      mindims: '0',
      maxdims: '0',
      minvals: '1',
      maxvals: '1',
      title: intl.get('COMM.INDEX_CARD'),
      dimsdesc: '0个维度',
      valsdesc: '1个数值',
    },
    [intl.get('COMM.SDSVIC')]: {
      img: 'z-index.png',
      disableimg: 'z-index-gray.png',
      selected: 'z-index.png',
      mindims: '1',
      maxdims: '1',
      minvals: '1',
      maxvals: '1',
      title: intl.get('COMM.SDSVIC'),
      dimsdesc: '1个维度',
      valsdesc: '1个数值',
    },
    [intl.get('COMM.SPEEDOMETER')]: {
      img: 'speed.png',
      disableimg: 'speed-gray.png',
      selected: 'board-selected.png',
      mindims: '0',
      maxdims: '0',
      minvals: '1',
      maxvals: '1',
      title: intl.get('COMM.SPEEDOMETER'),
      dimsdesc: '0个维度',
      valsdesc: '1个数值',
    },
    [intl.get('COMP.DASHBOARD')]: {
      img: 'dashBoard.png',
      disableimg: 'dashBoard-gray.png',
      selected: 'dashBoard-selected.png',
      mindims: '0',
      maxdims: '0',
      minvals: '1',
      maxvals: '1',
      title: intl.get('COMP.DASHBOARD'),
      dimsdesc: '0个维度',
      valsdesc: '1个数值',
    },
    // {intl.get('COMM.PHYSICAL_CLOCK')}: {
    //   img: 'physicalClock.png',
    //   disableimg: 'physicalClock-gray.png',
    //   selected: 'physicalClock-selected.png',
    //   mindims: '-1',
    //   maxdims: '100',
    //   minvals: '-1',
    //   maxvals: '100',
    //   title: intl.get('COMM.PHYSICAL_CLOCK'),
    //   dimsdesc: '0个或多个维度',
    //   valsdesc: '0个或多个数值',
    // },
  },
  [intl.get('REPO.MAP')]: {
    [intl.get('ANAL.MCM')]: {
      img: 'map-colored.png',
      disableimg: 'map-colored-gray.png',
      mindims: '1',
      maxdims: '1',
      minvals: '1',
      maxvals: '1',
      title: intl.get('ANAL.MCM'),
      dimsdesc: '1个维度',
      valsdesc: '1个数值',
    },
    [intl.get('ANAL.MAP_BUBBLE')]: {
      img: 'map-bubble.png',
      disableimg: 'map-bubble-gray.png',
      mindims: '1',
      maxdims: '1',
      minvals: '1',
      maxvals: '1',
      title: intl.get('ANAL.MAP_BUBBLE'),
      dimsdesc: '1个维度',
      valsdesc: '1个数值',
    },
  },
  [intl.get('SRC.OTHER')]: {
    [intl.get('ANAL.DATA_TABLE')]: {
      img: 'table.png',
      disableimg: 'table-gray.png',
      selected: 'table-selected.png',
      mindims: '0',
      maxdims: '100',
      minvals: '0',
      maxvals: '100',
      title: intl.get('ANAL.DATA_TABLE'),
      dimsdesc: '0个或多个维度',
      valsdesc: '0个或多个数值',
    },
    [intl.get('COMP.SCATTER_DIAGRAM')]: {
      img: 'scatter.png',
      disableimg: 'scatter-gray.png',
      selected: 'scatter-selected.png',
      mindims: '1',
      maxdims: '1',
      minvals: '2',
      maxvals: '2',
      title: intl.get('COMP.SCATTER_DIAGRAM'),
      dimsdesc: '1个维度',
      valsdesc: '2个数值',
    },
    [intl.get('COMM.SANKEY ')]: {
      img: 'sankey.png',
      disableimg: 'sankey-gray.png',
      selected: 'sankey-selected.png',
      mindims: '2',
      maxdims: '2',
      minvals: '1',
      maxvals: '1',
      title: intl.get('COMM.SANKEY '),
      dimsdesc: '2个维度',
      valsdesc: '1个数值',
    },
    [intl.get('COMM.RADAR_CHART')]: {
      img: 'radar.png',
      disableimg: 'radar-gray.png',
      selected: 'radar-selected.png',
      mindims: '2',
      maxdims: '2',
      minvals: '1',
      maxvals: '1',
      title: intl.get('COMM.RADAR_CHART'),
      dimsdesc: '2个维度',
      valsdesc: '1个数值',
    },
    [intl.get('COMP.FCMD')]: {
      img: 'lineBar.png',
      disableimg: 'lineBar-gray.png',
      selected: 'lineBar-selected.png',
      mindims: '1',
      maxdims: '1',
      minvals: '1',
      maxvals: '100',
      title: intl.get('COMP.FCMD'),
      dimsdesc: '1个维度',
      valsdesc: intl.get('COMM.MULTIPLE_VALUES'),
    },
    [intl.get('COMM.ROSE_CHART')]: {
      img: 'polar.png',
      disableimg: 'polar-gray.png',
      selected: 'polar-selected.png',
      mindims: '1',
      maxdims: '1',
      minvals: '1',
      maxvals: '100',
      title: intl.get('COMM.ROSE_CHART'),
      dimsdesc: '1个维度',
      valsdesc: '1个或多个数值',
    },
    [intl.get('COMM.CUSTOMIZED_HISTOGRAM')]: {
      img: 'Vbar.png',
      disableimg: 'Vbar-gray.png',
      selected: 'Vbar-selected.png',
      mindims: '1',
      maxdims: '1',
      minvals: '1',
      maxvals: '100',
      title: intl.get('COMM.CVH'),
      dimsdesc: '1个维度',
      valsdesc: '1个数值',
      isCustomized: true,
    },
    [intl.get('COMM.CLC')]: {
      img: 'line.png',
      disableimg: 'line-gray.png',
      selected: 'line-selected.png',
      mindims: '1',
      maxdims: '1',
      minvals: '1',
      maxvals: '100',
      title: intl.get('COMM.CLC'),
      dimsdesc: '1个维度',
      valsdesc: '1个或多个数值',
      isCustomized: true,
    },
    // {intl.get('COMM.CUSTOM_FORM')}: {
    //   img: 'table.png',
    //   disableimg: 'table-gray.png',
    //   selected: 'table-selected.png',
    //   mindims: '0',
    //   maxdims: '100',
    //   minvals: '0',
    //   maxvals: '100',
    //   title: intl.get('COMM.CUSTOM_FORM'),
    //   dimsdesc: '0个或多个维度',
    //   valsdesc: '0个或多个数值',
    //   isCustomized: true,
    // },
    [intl.get('COMM.RECTANGULAR_TREE')]: {
      img: 'treemap.png',
      disableimg: 'treemap-gray.png',
      selected: 'treemap.png',
      mindims: '1',
      maxdims: '1',
      minvals: '1',
      maxvals: '1',
      title: intl.get('COMM.RECTANGULAR_TREE'),
      dimsdesc: '1个维度',
      valsdesc: '1个数值',
    },
    [intl.get('COMM.FUNNEL_DIAGRAM')]: {
      img: 'funnel.png',
      disableimg: 'funnel-gray.png',
      selected: 'funnel.png',
      mindims: '1',
      maxdims: '1',
      minvals: '1',
      maxvals: '1',
      title: intl.get('COMM.FUNNEL_DIAGRAM'),
      dimsdesc: '1个维度',
      valsdesc: '1个数值',
    },
  },
};

// intl.get('COMM.HOME_MENU')
export const menu = [
  intl.get('APP.DATA_DOCUMENT'),
  intl.get('ANAL.DATA_ANALYZER'),
  intl.get('APP.LDS'),
  intl.get('ANAL.BASIC_DATA'),
  intl.get('ANAL.SUBJECT_DATA'),
  intl.get('APP.EXTERNAL_DATA'),
  intl.get('APP.DATA_EXCHANGE'),
  intl.get('BLOO.DATA_STANDARD'),
  intl.get('BLOO.DATA_SECURITY'),
  intl.get('BLOO.DATA_QUALITY'),
  intl.get('APP.DATA_SOURCE'),
  intl.get('COMM.VIDEO_SOURCE'),
  intl.get('DEVE.DATA_APPLICATION'),
  intl.get('DISP.DISPATCHING_CENTER'),
  intl.get('BLOO.SYSTEM_MANAGEMENT'),
  intl.get('COMM.USER_FEEDBACK'),
  intl.get('COMM.ACCESS_MANAGEMENT'),
  intl.get('BLOO.OAMM'),
  intl.get('COMM.BRS'),
  intl.get('COMM.DATA_VIEW'),
  intl.get('COMM.LOG_QUERY'),
  intl.get('APP.DATA_FILLING'),
  intl.get('COMM.QUESTIONNAIRE'),
  intl.get('COMM.EXTERNAL_PROGRAM'),
];
export const menuMap = {
  // intl.get('COMM.RCTM')
  数据应用: 'datastore',
  数据文档: 'report/listing',
  数据大屏: 'bigscreens/listing',
  数据分析仪: 'analyzer/listing',
  基础数据: 'asset/listing',
  主题数据: 'asset/listing?category=theme',
  外部数据: 'asset/listing?category=external',
  数据交换机: 'exchange/listing',
  数据标准: 'standard',
  // 数据标准: 'standardBank',
  数据源: 'datasource',
  数据安全: 'security',
  系统管理: 'system',
  视频源: 'video',
  运维监控: 'operation',
  用户反馈: '',
  调度中心: 'dispatchCenter',
  取数管理: 'takedataManage/listing',
  血缘监管: 'blood',
  数据查看: 'modulesPreview',
  日志查询: 'worknode',
  数据填报: 'dataReporting/listing',
  调查问卷: 'questionnaire/listing',
  外部程序: 'externalProgram/listing',
  数据质量: 'dataQualityCenter',
};

export const menuIcon = {
  数据应用: 'icon-shopping',
  数据文档: 'reportList',
  数据大屏: 'application',
  数据分析仪: 'analysis',
  基础数据: 'baseLibrary',
  主题数据: 'themeLibrary',
  外部数据: 'external',
  数据交换机: 'exchange',
  数据标准: 'standard',
  数据源: 'dataSource',
  数据安全: 'security',
  系统管理: 'system',
  视频源: 'videoSource',
  运维监控: 'operation',
  用户反馈: 'userFeedback',
  调度中心: 'dispatchCenter',
  取数管理: 'takedata',
  血缘监管: 'blood',
  数据查看: 'modulesPreview',
  日志查询: 'worknode',
  数据填报: 'dataReporting',
  调查问卷: 'questionnaire',
  外部程序: 'externalProgram',
  数据质量: 'dataQuality',
};

export const tabType = {
  资产库: '0',
  交换机: '1',
  分析仪: '2',
  大屏应用: '3',
  数据标准: '4',
  数据安全: '5',
  仪表盘: '6',
};

export const tabName = {
  '0': intl.get('COMM.DATA'),
  '1': intl.get('APP.DATA_EXCHANGE'),
  '2': intl.get('ANAL.DATA_ANALYZER'),
  '3': intl.get('APP.LDS'),
  '4': intl.get('BLOO.DATA_STANDARD'),
  '5': intl.get('BLOO.DATA_SECURITY'),
  '6': intl.get('APP.DATA_DOCUMENT'),
  '7': intl.get('COMM.DATA_DIRECTORY'),
};

export const timerType = {
  0: intl.get('ANAL.NOTHING'),
  1: intl.get('ANAL.SECOND'),
  2: intl.get('ASS.MINUTE'),
  3: intl.get('ATTE.HOUR'),
  4: intl.get('ANAL.DAY'),
  5: intl.get('ANAL.WEEK'),
};
// intl.get('COMM.AMAD')
export const analysisChildFuncModules = [
  {
    normal: 'data-normal.png',
    selected: 'data-selected.png',
    label: intl.get('COMM.DATA'),
    type: true,
  },
  {
    normal: 'filter-normal.png',
    selected: 'filter-selected.png',
    label: intl.get('COMM.FILTER'),
    type: true,
  },

  // {normal: 'attributes-normal.png', selected: 'attributes-selected.png', label: intl.get('COMM.ATTRIBUTE'), type: false},
  {
    normal: 'axis-normal.png',
    selected: 'axis-selected.png',
    label: intl.get('COMP.NUMBER_AXIS'),
    type: true,
  },
  {
    normal: 'chart-normal.png',
    selected: 'chart-selected.png',
    label: intl.get('CONT.CHART'),
    type: true,
  },
  {
    normal: 'glLibrary.png',
    selected: 'glLibrary.png',
    label: intl.get('REPO.RELATION'),
    type: false,
  },
  {
    normal: 'permission-normal.png',
    selected: 'permission-selected.png',
    label: intl.get('EVEN.JURISDICTION'),
    type: false,
  },
  {
    normal: 'shareChart-normal.png',
    selected: 'shareChart-selected.png',
    label: intl.get('ANAL.SHARE'),
    type: false,
  },
];

export const analysisCHildChartAttributes = [
  intl.get('BLOO.CURRENCY'),
  intl.get('COMM.COLUMN_SETTINGS'),
  intl.get('COMM.GRID_LINE'),
  intl.get('COMM.DLS'),
  intl.get('ANAL.NUMERICAL_VALUE'),
];

// intl.get('COMM.ASC')
export const analysisShareType = {
  URL: '0',
  下载: '1',
};

// intl.get('COMM.AAFFC')
export const addColumnFuncType = {
  '0': intl.get('ANAL.WHOLE'),
  '1': intl.get('COMM.NAS'),
  '2': intl.get('COMM.DAT'),
  '3': intl.get('ANAL.CHARACTER_STRING'),
  '4': intl.get('REPO.LOGIC'),
  '5': intl.get('ANAL.NUMERICAL_VALUE'),
};

export const addColumnFunc = [
  {
    name: 'ROW_MAX',
    func: 'ROW_MAX()',
    use: 'ROW_MAX(字段1,字段2,字段,...)',
    desc: '对比同行中各列的值,返回最大的值',
    ex: intl.get('COMM.TOPIC_MENTION'),
    type: '1',
  },
  {
    name: 'ROW_MAX1',
    func: 'ROW_MAX1()',
    use: 'ROW_MAX(字段1,字段2,字段,...)',
    desc: '对比同行中各列的值,返回最大的值',
    ex: intl.get('COMM.TOPIC_MENTION'),
    type: '1',
  },
  {
    name: 'ROW_MAX2',
    func: 'ROW_MAX2()',
    use: 'ROW_MAX(字段1,字段2,字段,...)',
    desc: '对比同行中各列的值,返回最大的值',
    ex: intl.get('COMM.TOPIC_MENTION'),
    type: '2',
  },
  {
    name: 'ROW_MAX3',
    func: 'ROW_MAX3()',
    use: 'ROW_MAX(字段1,字段2,字段,...)',
    desc: '对比同行中各列的值,返回最大的值',
    ex: intl.get('COMM.TOPIC_MENTION'),
    type: '3',
  },
  {
    name: 'ROW_MAX4',
    func: 'ROW_MAX4()',
    use: 'ROW_MAX(字段1,字段2,字段,...)',
    desc: '对比同行中各列的值,返回最大的值',
    ex: intl.get('COMM.TOPIC_MENTION'),
    type: '4',
  },
  {
    name: 'ROW_MAX5',
    func: 'ROW_MAX5()',
    use: 'ROW_MAX(字段1,字段2,字段,...)',
    desc: '对比同行中各列的值,返回最大的值',
    ex: intl.get('COMM.TOPIC_MENTION'),
    type: '5',
  },
  {
    name: 'ROW_MAX6',
    func: 'ROW_MAX6()',
    use: 'ROW_MAX(字段1,字段2,字段,...)',
    desc: '对比同行中各列的值,返回最大的值',
    ex: intl.get('COMM.TOPIC_MENTION'),
    type: '1',
  },
  {
    name: 'ROW_MAX7',
    func: 'ROW_MAX7()',
    use: 'ROW_MAX(字段1,字段2,字段,...)',
    desc: '对比同行中各列的值,返回最大的值',
    ex: intl.get('COMM.TOPIC_MENTION'),
    type: '2',
  },
  {
    name: 'ROW_MAX8',
    func: 'ROW_MAX8()',
    use: 'ROW_MAX(字段1,字段2,字段,...)',
    desc: '对比同行中各列的值,返回最大的值',
    ex: intl.get('COMM.TOPIC_MENTION'),
    type: '3',
  },
  {
    name: 'ROW_MAX9',
    func: 'ROW_MAX9()',
    use: 'ROW_MAX(字段1,字段2,字段,...)',
    desc: '对比同行中各列的值,返回最大的值',
    ex: intl.get('COMM.TOPIC_MENTION'),
    type: '4',
  },
  {
    name: 'ROW_MAX10',
    func: 'ROW_MAX10()',
    use: 'ROW_MAX(字段1,字段2,字段,...)',
    desc: '对比同行中各列的值,返回最大的值',
    ex: intl.get('COMM.TOPIC_MENTION'),
    type: '5',
  },
  {
    name: 'ROW_MAX11',
    func: 'ROW_MAX11()',
    use: 'ROW_MAX(字段1,字段2,字段,...)',
    desc: '对比同行中各列的值,返回最大的值',
    ex: intl.get('COMM.TOPIC_MENTION'),
    type: '1',
  },
  {
    name: 'ROW_MAX12',
    func: 'ROW_MAX12()',
    use: 'ROW_MAX(字段1,字段2,字段,...)',
    desc: '对比同行中各列的值,返回最大的值',
    ex: intl.get('COMM.TOPIC_MENTION'),
    type: '2',
  },
  {
    name: 'ROW_MAX13',
    func: 'ROW_MAX13()',
    use: 'ROW_MAX(字段1,字段2,字段,...)',
    desc: '对比同行中各列的值,返回最大的值',
    ex: intl.get('COMM.TOPIC_MENTION'),
    type: '3',
  },
];

export const ItemTypes = {
  // react-dnd{intl.get('COMM.PUID')}
  BOX: 'box',
  BOX2: 'box2',
  BOX3: 'box3',
};

export const headTitle = [
  'A',
  'B',
  'C',
  'D',
  'E',
  'F',
  'G',
  'H',
  'I',
  'J',
  'K',
  'L',
  'M',
  'N',
  'O',
  'P',
  'Q',
  'R',
  'S',
  'T',
  'U',
  'V',
  'W',
  'X',
  'Y',
  'Z',
  'AA',
  'AB',
  'AC',
  'AD',
  'AE',
  'AF',
  'AG',
  'AH',
  'AI',
  'AJ',
  'AK',
  'AL',
  'AM',
  'AN',
  'AO',
  'AP',
  'AQ',
  'AR',
  'AS',
  'AT',
  'AU',
  'AV',
  'AW',
  'AX',
  'AY',
  'AZ',
  'BA',
  'BB',
  'BC',
  'BD',
  'BE',
  'BF',
  'BG',
  'BH',
  'BI',
  'BJ',
  'BK',
  'BL',
  'BM',
  'BN',
  'BO',
  'BP',
  'BQ',
  'BR',
  'BS',
  'BT',
  'BU',
  'BV',
  'BW',
  'BX',
  'BY',
  'BZ',
  'CA',
  'CB',
  'CC',
  'CD',
  'CE',
  'CF',
  'CG',
  'CH',
  'CI',
  'CJ',
  'CK',
  'CL',
  'CM',
  'CN',
  'CO',
  'CP',
  'CQ',
  'CR',
  'CS',
  'CT',
  'CU',
  'CV',
  'CW',
  'CX',
  'CY',
  'CZ',
];
export const listImg = {
  1: require(`components/images/asset-type/1.png`),
  100: require(`components/images/asset-type/100.png`),
  101: require(`components/images/asset-type/101.png`),
  102: require(`components/images/asset-type/102.png`),
  103: require(`components/images/asset-type/103.png`),
  104: require(`components/images/asset-type/104.png`),
  105: require(`components/images/asset-type/105.png`),
  107: require(`components/images/asset-type/107.png`),
  106: require(`components/images/asset-type/106.png`),
  201: require(`components/images/asset-type/201.png`),
  202: require(`components/images/asset-type/202.png`),
  203: require(`components/images/asset-type/203.png`),
  204: require(`components/images/asset-type/204.png`),
  205: require(`components/images/asset-type/205.png`),
  206: require(`components/images/asset-type/206.png`),
  207: require(`components/images/asset-type/207.png`),
  300: require(`components/images/asset-type/300.png`),
  406: require(`components/images/asset-type/406.png`),
  2001: require(`components/images/asset-type/2001.png`),
  2022: require(`components/images/asset-type/2022.png`),
  sjwd: require(`components/images/asset-type/sjwd.png`),
  fxy: require(`components/images/asset-type/fxy.png`),
  jhj: require(`components/images/asset-type/jhj.png`),
  takedata: require(`components/images/asset-type/dataicon.png`),
  501: require(`components/images/asset-type/501.png`),
  502: require(`components/images/asset-type/502.png`),
  503: require(`components/images/asset-type/503.png`),
  108: require(`components/images/asset-type/108.png`),
  208: require(`components/images/asset-type/208.png`),
  112: require(`components/images/asset-type/112.png`),
  620: require(`components/images/asset-type/620.png`),
  600: require(`components/images/asset-type/600.png`),
  5001: require(`components/images/asset-type/5001.png`),
  504: require(`components/images/asset-type/504.png`),
  601: require(`components/images/asset-type/601.png`),
  120: require(`components/images/asset-type/120.png`),
  113: require(`components/images/asset-type/113.png`),
  111: require(`components/images/asset-type/111.png`),
  505: require(`components/images/asset-type/505.png`),
  400: require(`components/images/asset-type/400.png`),
};

export const DATATYPE = {
  0: 'string',
  5: 'date',
  6: 'timestamp',
  8: 'number',
  10: 'image',
  string: 0,
  date: 5,
  timestamp: 6,
  number: 8,
  image: 10,
};

export const CUSTOM_DATE_OPTION = 20;

export const CUSTOM_DATE_SCOPE = 21;

// intl.get('COMP.EWC')
export const WARNING_INTERVALS = [
  intl.get('ASS.MINUTE'),
  intl.get('ATTE.HOUR'),
  intl.get('ANAL.DAY'),
  intl.get('ANAL.WEEK'),
  intl.get('ANAL.MONTH'),
  intl.get('ANAL.YEAR'),
];

// intl.get('COMM.SVTOA')
export const FillValueType = {
  0: intl.get('ANAL.FIXED_VALUE'),
  1: intl.get('COMM.CALCULATED_VALUE'),
  '-1': intl.get('ANAL.NOTHING'),
};

// intl.get('COMM.ANNTSVT')
export const FillValueTypes = {
  0: intl.get('ANAL.FIXED_VALUE'),
  '-1': intl.get('ANAL.NOTHING'),
};

// intl.get('COMM.AMTT')
export const FillTimeType = {
  13: intl.get('ANAL.RANGE'),
  17: intl.get('ANAL.LAST_WEEK'),
  18: intl.get('ANAL.LTW'),
  19: intl.get('ANAL.LAST_MONTH'),
  20: intl.get('ANAL.LTM'),
  21: intl.get('ANAL.LAST_YEAR'),
  24: intl.get('ANAL.THIS_WEEK'),
  25: intl.get('ANAL.PREVIOUS_WEEK'),
  27: intl.get('ANAL.THIS_MONTH'),
  28: intl.get('ANAL.PREVIOUS_MONTH'),
  34: intl.get('ANAL.PREVIOUS_QUARTER'),
  31: intl.get('ANAL.PREVIOUS_YEAR'),
  30: intl.get('ANAL.THIS_YEAR'),
  33: intl.get('ANAL.THIS_QUARTER'),
};

export const LIST_PAGE_SIZE = 50;

// intl.get('REPO.SKY_MAP')key
export const TIANDITU_KEY = '393226a27031cf7b4358b7f0c9c37301';

// intl.get('COMM.TPOTFBWTCS')
export const FILTER_ON_SCROLL = ['101', '416', '439', '421', '424'];

/**
 * intl.get('COMM.ANALYZER_TYPE')
 * 0 intl.get('ANAL.DATA_ANALYZER')
 * 1 intl.get('COMM.SPECTRUM_ANALYZER')
 * 2 intl.get('COMM.TIMING_ANALYZER')
 */
export const DATA_ANALYSIS = 0;
export const GRAPH_ANALYSIS = 1;
export const TIME_SPACE_ANALYSIS = 2;

export const AI_TIME_TYPE = () => {
  return [
    {
      value: 'Y',
      name: intl.get('ANAL.YEAR'),
      num: 0,
    },
    {
      value: 'Q',
      name: intl.get('COMM.SEASON'),
      num: 1,
    },
    {
      value: 'M',
      name: intl.get('ANAL.MONTH'),
      num: 2,
    },
    {
      value: 'W',
      name: intl.get('ANAL.WEEK'),
      num: 3,
    },
    {
      value: 'D',
      name: intl.get('ANAL.DAY'),
      num: 4,
    },
    {
      value: 'H',
      name: intl.get('ANAL.TIME'),
      num: 5,
    },
    {
      value: 'T',
      name: intl.get('ANAL.BRANCH'),
      num: 6,
    },
    {
      value: 'S',
      name: intl.get('ANAL.SECOND'),
      num: 7,
    },
    {
      value: 'Z',
      name: intl.get('ANAL.CUSTOM'),
      num: 8,
    },
  ];
};

// 自定义周期选项
export const CUSTOM_CYCLE_OPTIONS = [
  {
    name: intl.get('ANAL.TIME'), // '时'
    value: 'H',
    placeholder: intl.get('COMP.PLEASE_ENTER') + '2-23',
  },
  {
    name: intl.get('COMP.DAY'), // '天',
    value: 'D',
    placeholder: intl.get('COMP.PLEASE_ENTER') + '2-30',
  },
  {
    name: intl.get('ANAL.MONTH'), // '月',
    value: 'M',
    placeholder: intl.get('COMP.PLEASE_ENTER') + '2-11',
  },
  // {
  //   name: intl.get('ANAL.SEASON'), // '季',
  //   value: 'S',
  //   placeholder: intl.get('COMP.PLEASE_ENTER') + '1-3',
  // },
  {
    name: intl.get('ANAL.YEAR'), // '年',
    value: 'Y',
    placeholder: intl.get('COMP.PLEASE_ENTER'),
  },
];

// 大屏选择数据类型位数据填报提示信息为请配置配置信息的组件
export const DIFFERENT_TIPS = ['636', 'global-search'];

export const DISPLAY_TIPS = [
  'global-search',
  'select',
  'plugin',
  'city_map_3D',
];
